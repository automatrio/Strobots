// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace NetworkPacket
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct Vec3 : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public Vec3 __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public float X { get { return __p.bb.GetFloat(__p.bb_pos + 0); } }
  public float Y { get { return __p.bb.GetFloat(__p.bb_pos + 4); } }
  public float Z { get { return __p.bb.GetFloat(__p.bb_pos + 8); } }

  public static Offset<NetworkPacket.Vec3> CreateVec3(FlatBufferBuilder builder, float X, float Y, float Z) {
    builder.Prep(4, 12);
    builder.PutFloat(Z);
    builder.PutFloat(Y);
    builder.PutFloat(X);
    return new Offset<NetworkPacket.Vec3>(builder.Offset);
  }
};

public struct EntityData : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static EntityData GetRootAsEntityData(ByteBuffer _bb) { return GetRootAsEntityData(_bb, new EntityData()); }
  public static EntityData GetRootAsEntityData(ByteBuffer _bb, EntityData obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public EntityData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Health { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int State { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public NetworkPacket.Vec3? Pos { get { int o = __p.__offset(8); return o != 0 ? (NetworkPacket.Vec3?)(new NetworkPacket.Vec3()).__assign(o + __p.bb_pos, __p.bb) : null; } }

  public static void StartEntityData(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddHealth(FlatBufferBuilder builder, int health) { builder.AddInt(0, health, 0); }
  public static void AddState(FlatBufferBuilder builder, int state) { builder.AddInt(1, state, 0); }
  public static void AddPos(FlatBufferBuilder builder, Offset<NetworkPacket.Vec3> posOffset) { builder.AddStruct(2, posOffset.Value, 0); }
  public static Offset<NetworkPacket.EntityData> EndEntityData(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NetworkPacket.EntityData>(o);
  }
};


}
